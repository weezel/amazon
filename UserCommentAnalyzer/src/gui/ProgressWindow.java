/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProgressWindow.java
 *
 * Created on Nov 19, 2010, 1:34:34 PM
 */
package gui;

import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JFrame;

/**
 * Fetching comment analysis window. Displays a progress bar which shows the
 * process status and gives the chance to the user to stop the process pressing
 * the stop process button.
 *
 * @author javiersalcedogomez
 */
public class ProgressWindow extends JFrame{

    /**
     * Progress window unique class instance.
     */
    private static ProgressWindow _instance;

    /**
     * Returns the unique class instance.
     *
     * @return the unique class instance.
     */
    public static ProgressWindow getInstance() {

        if(_instance == null)
            _instance = new ProgressWindow();
        return _instance;    
    }

    /** 
     * Creates new form ProgressWindow.
     */
    public ProgressWindow() {
        
        initComponents();

        // Get the size of the screen
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        // Determine the new location of the window
        int w = getSize().width;
        int h = getSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;

        // Move the window
        setLocation(x, y);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        _buttonPanel = new javax.swing.JPanel();
        _stopProcessButton = new javax.swing.JButton();
        _progressPanel = new javax.swing.JPanel();
        _scrollPane = new javax.swing.JScrollPane();
        _progressProcessTextPane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(ProgressWindow.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setLocationByPlatform(true);
        setName("Form"); // NOI18N

        _buttonPanel.setName("_buttonPanel"); // NOI18N
        _buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        _stopProcessButton.setText(resourceMap.getString("_stopProcessButton.text")); // NOI18N
        _stopProcessButton.setName("_stopProcessButton"); // NOI18N
        _stopProcessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _stopProcessButtonActionPerformed(evt);
            }
        });
        _buttonPanel.add(_stopProcessButton);

        getContentPane().add(_buttonPanel, java.awt.BorderLayout.SOUTH);

        _progressPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Fetching comments progress status"));
        _progressPanel.setName("_progressPanel"); // NOI18N
        _progressPanel.setLayout(new java.awt.BorderLayout());

        _scrollPane.setName("_scrollPane"); // NOI18N

        _progressProcessTextPane.setBackground(resourceMap.getColor("_progressProcessTextPane.background")); // NOI18N
        _progressProcessTextPane.setEditable(false);
        _progressProcessTextPane.setForeground(resourceMap.getColor("_progressProcessTextPane.foreground")); // NOI18N
        _progressProcessTextPane.setCaretColor(resourceMap.getColor("_progressProcessTextPane.caretColor")); // NOI18N
        _progressProcessTextPane.setName("_progressProcessTextPane"); // NOI18N
        _scrollPane.setViewportView(_progressProcessTextPane);

        _progressPanel.add(_scrollPane, java.awt.BorderLayout.CENTER);

        getContentPane().add(_progressPanel, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-450)/2, (screenSize.height-600)/2, 450, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void _stopProcessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__stopProcessButtonActionPerformed
        // TODO add your handling code here:
        // STOPS THE PROCESS

    }//GEN-LAST:event__stopProcessButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel _buttonPanel;
    private javax.swing.JPanel _progressPanel;
    private javax.swing.JTextPane _progressProcessTextPane;
    private javax.swing.JScrollPane _scrollPane;
    private javax.swing.JButton _stopProcessButton;
    // End of variables declaration//GEN-END:variables

    /**
     * Shows the progress window.
     */
    public void showProgressWindow(){

        // Shows the progress window
        setVisible(true);
    }

    /**
     * Updates the progress bar with the current value.
     *
     * @param value new value to set.
     */
    public void updateProgressWindow(String value){
        //_progressBar.setValue(Integer.parseInt(value));
        _progressProcessTextPane.setText(_progressProcessTextPane.getText().concat(value) + "\n");

        validate();
        repaint();
    }

    /**
     * Closes the progress window.
     */
    public void closeProgressWindow() {

        // Closes this window
        dispose();
    }

    /**
     * Clears the text pane of the progress window.
     */
    public void clearTextPaneContent(){

        // Clears the text area which displays the process
        _progressProcessTextPane.setText("");
    }
}
