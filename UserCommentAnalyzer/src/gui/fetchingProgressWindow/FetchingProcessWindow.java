/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FetchingProgressWindow.java
 *
 * Created on Jan 6, 2011, 6:59:54 PM
 */

package gui.fetchingProgressWindow;

import gui.mainWindow.MainWindow;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.SwingUtilities;

/**
 * Fetching comment analysis window. Displays a progress bar which shows the
 * process status and gives the chance to the user to stop the process pressing
 * the stop process button.
 *
 * @author javiersalcedogomez
 */
public class FetchingProcessWindow extends javax.swing.JFrame {

        /**
     * Fetching progress window unique class instance.
     */
    private static FetchingProcessWindow _instance;

    /**
     * Returns the unique class instance.
     *
     * @return the unique class instance.
     */
    public static FetchingProcessWindow getInstance() {

        if(_instance == null)
            _instance = new FetchingProcessWindow();
        return _instance;
    }

    /** 
     * Creates a new fetching progress window.
     */
    public FetchingProcessWindow() {
        
        initComponents();

        // Get the size of the screen
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        // Determine the new location of the window
        int w = getSize().width;
        int h = getSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;

        // Move the window
        setLocation(x, y);
    }

    /**
     * Shows the progress window.
     */
    public void showProgressWindow(){

        // Disables the close button
        _closeButton.setEnabled(false);

        // Shows the progress window
        setVisible(true);
    }

        /**
     * Updates the progress bar with the current value.
     *
     * @param value new value to set.
     */
    public void updateProgressWindow(final String value){

        SwingUtilities.invokeLater(new Runnable(){

            @Override
            public void run() {

                //_progressBar.setValue(Integer.parseInt(value));
                _outputTextArea.setText(_outputTextArea.getText().concat(value) + "\n");

                validate();
                repaint();
            }
        });
    }

    /**
     * Closes the progress window.
     */
    public void closeProgressWindow() {

        // Closes this window
        dispose();
    }

    /**
     * Clears the text pane of the progress window.
     */
    public void clearTextAreaContent(){

        // Clears the text area which displays the process
        _outputTextArea.setText("");
    }

    /**
     * Enables the close button once the fetching process has been done.
     */
    public void enableCloseButton() {
        _closeButton.setEnabled(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        _buttonPanel = new javax.swing.JPanel();
        _closeButton = new javax.swing.JButton();
        _outputPanel = new javax.swing.JPanel();
        _outputScrollPane = new javax.swing.JScrollPane();
        _outputTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Fetching Process Window");

        _buttonPanel.setBackground(new java.awt.Color(170, 185, 210));
        _buttonPanel.setForeground(new java.awt.Color(80, 80, 100));
        _buttonPanel.setName("_buttonPanel"); // NOI18N
        _buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        _closeButton.setBackground(new java.awt.Color(170, 185, 238));
        _closeButton.setForeground(new java.awt.Color(80, 80, 100));
        _closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/resources/images/icons/Close.png"))); // NOI18N
        _closeButton.setText("Close");
        _closeButton.setToolTipText("Closes the Fetching Progress Window");
        _closeButton.setName("_closeButton"); // NOI18N
        _closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _closeButtonActionPerformed(evt);
            }
        });
        _buttonPanel.add(_closeButton);

        getContentPane().add(_buttonPanel, java.awt.BorderLayout.SOUTH);

        _outputPanel.setBackground(new java.awt.Color(170, 185, 210));
        _outputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fecthing progress status", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(80, 80, 100))); // NOI18N
        _outputPanel.setName("_outputPanel"); // NOI18N
        _outputPanel.setLayout(new java.awt.GridBagLayout());

        _outputScrollPane.setName("_outputScrollPane"); // NOI18N

        _outputTextArea.setBackground(new java.awt.Color(0, 0, 0));
        _outputTextArea.setColumns(20);
        _outputTextArea.setForeground(new java.awt.Color(0, 255, 0));
        _outputTextArea.setRows(5);
        _outputTextArea.setName("_outputTextArea"); // NOI18N
        _outputScrollPane.setViewportView(_outputTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 300;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        _outputPanel.add(_outputScrollPane, gridBagConstraints);

        getContentPane().add(_outputPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void _closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__closeButtonActionPerformed

        // Clsoe the progress window
        closeProgressWindow();

        // Starts the build results process
        MainWindow.getInstance().getGettingResultsProcess().start();
    }//GEN-LAST:event__closeButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FetchingProcessWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel _buttonPanel;
    private javax.swing.JButton _closeButton;
    private javax.swing.JPanel _outputPanel;
    private javax.swing.JScrollPane _outputScrollPane;
    private javax.swing.JTextArea _outputTextArea;
    // End of variables declaration//GEN-END:variables

}
