/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SpellCheckersWindow.java
 *
 * Created on Jan 10, 2011, 2:31:02 PM
 */
package spellChecker;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JList;


/**
 * Spell checkers window.
 * 
 * Displays the 
 *
 * @author javiersalcedogomez
 */
public class SpellCheckersWindow extends javax.swing.JFrame {

    /**
     * Spell checkers window unique class instance.
     */
    private static SpellCheckersWindow _instance;
    /**
     * Keyword list.
     */
    private String[] _wordList;
    /**
     * Selected word in the product list.
     */
    private String _selectedWord;

    /**
     * Returns the spell checkers window unique class instance.
     * 
     * @return the spell checkers window unique class instance.
     */
    public static SpellCheckersWindow getInstance() {

        if (_instance == null) {
            _instance = new SpellCheckersWindow();
        }
        return _instance;
    }

    /** 
     * Creates new form SpellCheckersWindow.
     */
    public SpellCheckersWindow() {

        initComponents();

        // Get the size of the screen
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        // Determine the new location of the window
        int w = getSize().width;
        int h = getSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;

        // Move the window
        setLocation(x, y);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setVisible(true);
    }

    /**
     * Updates the text to display in the text pane.
     *
     * @param text new tezt to set.
     */
    public void setText(String text) {
         jList1 = new JList(_wordList);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        _mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        _buttonPanel = new javax.swing.JPanel();
        _closeButton = new javax.swing.JButton();
        _commandPanel = new javax.swing.JPanel();
        _levensteinBoundaryLabel = new javax.swing.JLabel();
        _levensteinBoundaryTextField = new javax.swing.JTextField();
        _diceCoefficientLabel = new javax.swing.JLabel();
        _diceCoefficientTextField = new javax.swing.JTextField();
        _showMisspelledWordsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Spell Checkers Window");
        setBackground(new java.awt.Color(170, 185, 210));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        _mainPanel.setBackground(new java.awt.Color(170, 185, 210));
        _mainPanel.setForeground(new java.awt.Color(80, 80, 10));
        _mainPanel.setName("_mainPanel"); // NOI18N
        _mainPanel.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setMinimumSize(new java.awt.Dimension(120, 40));
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        jScrollPane1.setViewportView(jList1);
        jList1.getAccessibleContext().setAccessibleParent(jList1);

        _mainPanel.add(jScrollPane1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(_mainPanel, gridBagConstraints);

        _buttonPanel.setBackground(new java.awt.Color(170, 185, 210));
        _buttonPanel.setForeground(new java.awt.Color(80, 80, 100));
        _buttonPanel.setName("_buttonPanel"); // NOI18N
        _buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        _closeButton.setBackground(new java.awt.Color(170, 185, 210));
        _closeButton.setForeground(new java.awt.Color(80, 80, 100));
        _closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/resources/images/icons/Close.png"))); // NOI18N
        _closeButton.setText("Close");
        _closeButton.setToolTipText("Closes the spell checking window");
        _closeButton.setName("_closeButton"); // NOI18N
        _closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _closeButtonActionPerformed(evt);
            }
        });
        _buttonPanel.add(_closeButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(_buttonPanel, gridBagConstraints);

        _commandPanel.setBackground(new java.awt.Color(170, 185, 210));
        _commandPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Configuration Settings", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(80, 80, 100))); // NOI18N
        _commandPanel.setForeground(new java.awt.Color(80, 80, 100));
        _commandPanel.setName("_commandPanel"); // NOI18N
        _commandPanel.setLayout(new java.awt.GridBagLayout());

        _levensteinBoundaryLabel.setBackground(new java.awt.Color(170, 185, 210));
        _levensteinBoundaryLabel.setForeground(new java.awt.Color(80, 80, 100));
        _levensteinBoundaryLabel.setText("Levenstein Boundary:");
        _levensteinBoundaryLabel.setName("_levensteinBoundaryLabel"); // NOI18N
        _commandPanel.add(_levensteinBoundaryLabel, new java.awt.GridBagConstraints());

        _levensteinBoundaryTextField.setForeground(new java.awt.Color(80, 80, 100));
        _levensteinBoundaryTextField.setText("2");
        _levensteinBoundaryTextField.setName("_levensteinBoundaryTextField"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 20;
        _commandPanel.add(_levensteinBoundaryTextField, gridBagConstraints);

        _diceCoefficientLabel.setBackground(new java.awt.Color(170, 185, 210));
        _diceCoefficientLabel.setForeground(new java.awt.Color(80, 80, 100));
        _diceCoefficientLabel.setText("Dice Coefficient:");
        _diceCoefficientLabel.setName("_diceCoefficientLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        _commandPanel.add(_diceCoefficientLabel, gridBagConstraints);

        _diceCoefficientTextField.setForeground(new java.awt.Color(80, 80, 100));
        _diceCoefficientTextField.setText("80");
        _diceCoefficientTextField.setName("_diceCoefficientTextField"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 20;
        _commandPanel.add(_diceCoefficientTextField, gridBagConstraints);

        _showMisspelledWordsButton.setBackground(new java.awt.Color(170, 185, 210));
        _showMisspelledWordsButton.setForeground(new java.awt.Color(80, 80, 100));
        _showMisspelledWordsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/resources/images/icons/Show.png"))); // NOI18N
        _showMisspelledWordsButton.setText("Show misspelled words");
        _showMisspelledWordsButton.setName("_showMisspelledWordsButton"); // NOI18N
        _showMisspelledWordsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _showMisspelledWordsButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        _commandPanel.add(_showMisspelledWordsButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.4;
        getContentPane().add(_commandPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Close button action perfomed.
     * 
     * @param evt action event.
     */
    private void _closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__closeButtonActionPerformed

        // Closes the window
        dispose();
    }//GEN-LAST:event__closeButtonActionPerformed

    /**
     * Show misspelled words button.
     * 
     * @param evt action event.
     */
    private void _showMisspelledWordsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__showMisspelledWordsButtonActionPerformed

        // Gets the levenstein boundary from the text field
        int levensteinBoundary = Integer.parseInt(_levensteinBoundaryTextField.getText());

        // Gets the dice coefficient from the text field
        int diceCoefficient = Integer.parseInt(_diceCoefficientTextField.getText());

        ArrayList<String> missSpelled = SpellCheckers.nearWords(_wordList, _selectedWord, levensteinBoundary, diceCoefficient);
        Collections.sort(missSpelled);
       
        // Updates the text in the spell checkers window
        //for (String s : missSpelled)
            //_textArea = (missSpelled);
        for (int i=0; i < missSpelled.size(); i++)
            _wordList[i] = missSpelled.get(i);
        SpellCheckersWindow.getInstance().jList1 = new JList(_wordList);
    }//GEN-LAST:event__showMisspelledWordsButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel _buttonPanel;
    private javax.swing.JButton _closeButton;
    private javax.swing.JPanel _commandPanel;
    private javax.swing.JLabel _diceCoefficientLabel;
    private javax.swing.JTextField _diceCoefficientTextField;
    private javax.swing.JLabel _levensteinBoundaryLabel;
    private javax.swing.JTextField _levensteinBoundaryTextField;
    private javax.swing.JPanel _mainPanel;
    private javax.swing.JButton _showMisspelledWordsButton;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    /**
     * Shows the spell checkers window.
     */
    public void showWindow(String[] wordList, String selectedWord) {

        // Gets the selected word from the list
        _selectedWord = selectedWord;
        SpellCheckersWindow.getInstance().jList1 = new JList(wordList);

        // Sets the window visible
        setVisible(true);
    }
}
